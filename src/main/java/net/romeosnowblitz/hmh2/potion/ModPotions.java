package net.romeosnowblitz.hmh2.potion;

import net.minecraft.entity.effect.StatusEffectInstance;
import net.minecraft.entity.effect.StatusEffects;
import net.minecraft.item.Items;
import net.minecraft.potion.Potion;
import net.minecraft.potion.Potions;
import net.minecraft.recipe.BrewingRecipeRegistry;
import net.minecraft.registry.Registries;
import net.minecraft.registry.Registry;
import net.minecraft.util.Identifier;
import net.romeosnowblitz.hmh2.Hmh2;
import net.romeosnowblitz.hmh2.block.MagicBlocks;
import net.romeosnowblitz.hmh2.effect.CustomEffects;
import net.romeosnowblitz.hmh2.item.ModItems;
import net.romeosnowblitz.hmh2.item.SustenanceItems;

public class ModPotions {
    public static Potion QUANTUM_LOCK_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "quantum_lock_potion"), new Potion(new StatusEffectInstance(CustomEffects.QUANTUM_LOCK, 5120, 0)));
    public static Potion LONG_QUANTUM_LOCK_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "long_quantum_lock_potion"), new Potion(new StatusEffectInstance(CustomEffects.QUANTUM_LOCK, 10240, 0)));
    public static Potion STRONG_QUANTUM_LOCK_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "strong_quantum_lock_potion"), new Potion(new StatusEffectInstance(CustomEffects.QUANTUM_LOCK, 2560, 1)));
    public static Potion ENDER_SKIN_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "ender_skin_potion"), new Potion(new StatusEffectInstance(CustomEffects.ENDER_SKIN, 5120, 0)));
    public static Potion LONG_ENDER_SKIN_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "long_ender_skin_potion"), new Potion(new StatusEffectInstance(CustomEffects.ENDER_SKIN, 10240, 0)));
    public static Potion STRONG_ENDER_SKIN_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "strong_ender_skin_potion"), new Potion(new StatusEffectInstance(CustomEffects.ENDER_SKIN, 2560, 1)));
    public static Potion SILK_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "silk_potion"), new Potion(new StatusEffectInstance(CustomEffects.SPIDER_EFFECT, 5120, 0)));
    public static Potion LONG_SILK_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "long_silk_potion"), new Potion(new StatusEffectInstance(CustomEffects.SPIDER_EFFECT, 10240, 0)));
    public static Potion STRONG_SILK_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "strong_silk_potion"), new Potion(new StatusEffectInstance(CustomEffects.SPIDER_EFFECT, 2560, 1)));
    public static Potion SLIME_LUNG_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "slime_lung_potion"), new Potion(new StatusEffectInstance(CustomEffects.SLIME_LUNG, 5120, 0)));
    public static Potion LONG_SLIME_LUNG_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "long_slime_lung_potion"), new Potion(new StatusEffectInstance(CustomEffects.SLIME_LUNG, 10240, 0)));
    public static Potion STRONG_SLIME_LUNG_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "strong_slime_lung_potion"), new Potion(new StatusEffectInstance(CustomEffects.SLIME_LUNG, 2560, 1)));
    public static Potion HASTE_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "haste_potion"), new Potion(new StatusEffectInstance(StatusEffects.HASTE, 5120, 0)));
    public static Potion LONG_HASTE_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "long_haste_potion"), new Potion(new StatusEffectInstance(StatusEffects.HASTE, 10240, 0)));
    public static Potion STRONG_HASTE_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "strong_haste_potion"), new Potion(new StatusEffectInstance(StatusEffects.HASTE, 2560, 1)));
    public static Potion LUCK_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "luck_potion"), new Potion(new StatusEffectInstance(StatusEffects.LUCK, 5120, 0)));
    public static Potion LONG_LUCK_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "long_luck_potion"), new Potion(new StatusEffectInstance(StatusEffects.LUCK, 10240, 0)));
    public static Potion STRONG_LUCK_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "strong_luck_potion"), new Potion(new StatusEffectInstance(StatusEffects.LUCK, 2560, 1)));
    public static Potion MINING_FATIGUE_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "mining_fatigue_potion"), new Potion(new StatusEffectInstance(StatusEffects.MINING_FATIGUE, 5120, 0)));
    public static Potion LONG_MINING_FATIGUE_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "long_mining_fatigue_potion"), new Potion(new StatusEffectInstance(StatusEffects.MINING_FATIGUE, 10240, 0)));
    public static Potion STRONG_MINING_FATIGUE_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "strong_mining_fatigue_potion"), new Potion(new StatusEffectInstance(StatusEffects.MINING_FATIGUE, 2560, 1)));
    public static Potion LEVITATION_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "levitation_potion"), new Potion(new StatusEffectInstance(StatusEffects.LEVITATION, 5120, 0)));
    public static Potion LONG_LEVITATION_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "long_levitation_potion"), new Potion(new StatusEffectInstance(StatusEffects.LEVITATION, 10240, 0)));
    public static Potion STRONG_LEVITATION_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "strong_levitation_potion"), new Potion(new StatusEffectInstance(StatusEffects.LEVITATION, 2560, 1)));
    public static Potion BLINDNESS_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "blindness_potion"), new Potion(new StatusEffectInstance(StatusEffects.BLINDNESS, 5120, 0)));
    public static Potion LONG_BLINDNESS_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "long_blindness_potion"), new Potion(new StatusEffectInstance(StatusEffects.BLINDNESS, 10240, 0)));
    public static Potion GLOWING_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "glowing_potion"), new Potion(new StatusEffectInstance(StatusEffects.GLOWING, 5120, 0)));
    public static Potion LONG_GLOWING_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "long_glowing_potion"), new Potion(new StatusEffectInstance(StatusEffects.GLOWING, 10240, 0)));
    public static Potion BAD_LUCK_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "bad_luck_potion"), new Potion(new StatusEffectInstance(StatusEffects.UNLUCK, 5120, 0)));
    public static Potion LONG_BAD_LUCK_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "long_bad_luck_potion"), new Potion(new StatusEffectInstance(StatusEffects.UNLUCK, 10240, 0)));
    public static Potion STRONG_BAD_LUCK_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "strong_bad_luck_potion"), new Potion(new StatusEffectInstance(StatusEffects.UNLUCK, 2560, 1)));
    public static Potion HUNGER_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "hunger_potion"), new Potion(new StatusEffectInstance(StatusEffects.HUNGER, 5120, 0)));
    public static Potion LONG_HUNGER_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "long_hunger_potion"), new Potion(new StatusEffectInstance(StatusEffects.HUNGER, 10240, 0)));
    public static Potion STRONG_HUNGER_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "strong_hunger_potion"), new Potion(new StatusEffectInstance(StatusEffects.HUNGER, 2560, 1)));
    public static Potion SATURATION_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "saturation_potion"), new Potion(new StatusEffectInstance(StatusEffects.SATURATION, 5120, 0)));
    public static Potion LONG_SATURATION_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "long_saturation_potion"), new Potion(new StatusEffectInstance(StatusEffects.SATURATION, 10240, 0)));
    public static Potion STRONG_SATURATION_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "strong_saturation_potion"), new Potion(new StatusEffectInstance(StatusEffects.SATURATION, 2560, 1)));
    public static Potion BAD_OMEN_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "bad_omen_potion"), new Potion(new StatusEffectInstance(StatusEffects.BAD_OMEN, 5120, 0)));
    public static Potion LONG_BAD_OMEN_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "long_bad_omen_potion"), new Potion(new StatusEffectInstance(StatusEffects.BAD_OMEN, 10240, 0)));
    public static Potion STRONG_BAD_OMEN_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "strong_bad_omen_potion"), new Potion(new StatusEffectInstance(StatusEffects.BAD_OMEN, 2560, 1)));
    public static Potion VILLAGE_HERO_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "village_hero_potion"), new Potion(new StatusEffectInstance(StatusEffects.HERO_OF_THE_VILLAGE, 5120, 0)));
    public static Potion LONG_VILLAGE_HERO_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "long_village_hero_potion"), new Potion(new StatusEffectInstance(StatusEffects.HERO_OF_THE_VILLAGE, 10240, 0)));
    public static Potion STRONG_VILLAGE_HERO_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "strong_village_hero_potion"), new Potion(new StatusEffectInstance(StatusEffects.HERO_OF_THE_VILLAGE, 2560, 1)));
    public static Potion NAUSEA_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "nausea_potion"), new Potion(new StatusEffectInstance(StatusEffects.NAUSEA, 5120, 0)));
    public static Potion LONG_NAUSEA_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "long_nausea_potion"), new Potion(new StatusEffectInstance(StatusEffects.NAUSEA, 10240, 0)));
    public static Potion STRONG_NAUSEA_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "strong_nausea_potion"), new Potion(new StatusEffectInstance(StatusEffects.NAUSEA, 2560, 1)));
    public static Potion DOLPHINS_GRACE_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "dolphins_grace_potion"), new Potion(new StatusEffectInstance(StatusEffects.DOLPHINS_GRACE, 5120, 0)));
    public static Potion LONG_DOLPHINS_GRACE_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "long_dolphins_grace_potion"), new Potion(new StatusEffectInstance(StatusEffects.DOLPHINS_GRACE, 10240, 0)));
    public static Potion STRONG_DOLPHINS_GRACE_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "strong_dolphins_grace_potion"), new Potion(new StatusEffectInstance(StatusEffects.DOLPHINS_GRACE, 2560, 1)));
    public static Potion WITHER_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "wither_potion"), new Potion(new StatusEffectInstance(StatusEffects.WITHER, 5120, 0)));
    public static Potion LONG_WITHER_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "long_wither_potion"), new Potion(new StatusEffectInstance(StatusEffects.WITHER, 10240, 0)));
    public static Potion STRONG_WITHER_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "strong_wither_potion"), new Potion(new StatusEffectInstance(StatusEffects.WITHER, 2560, 1)));
    public static Potion RESISTANCE_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "resistance_potion"), new Potion(new StatusEffectInstance(StatusEffects.RESISTANCE, 5120, 0)));
    public static Potion LONG_RESISTANCE_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "long_resistance_potion"), new Potion(new StatusEffectInstance(StatusEffects.RESISTANCE, 10240, 0)));
    public static Potion STRONG_RESISTANCE_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "strong_resistance_potion"), new Potion(new StatusEffectInstance(StatusEffects.RESISTANCE, 2560, 1)));
    public static Potion HEALTH_BOOST_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "health_boost_potion"), new Potion(new StatusEffectInstance(StatusEffects.HEALTH_BOOST, 5120, 0)));
    public static Potion LONG_HEALTH_BOOST_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "long_health_boost_potion"), new Potion(new StatusEffectInstance(StatusEffects.HEALTH_BOOST, 10240, 0)));
    public static Potion STRONG_HEALTH_BOOST_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "strong_health_boost_potion"), new Potion(new StatusEffectInstance(StatusEffects.HEALTH_BOOST, 2560, 1)));
    public static Potion ABSORPTION_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "absorption_potion"), new Potion(new StatusEffectInstance(StatusEffects.ABSORPTION, 5120, 0)));
    public static Potion LONG_ABSORPTION_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "long_absorption_potion"), new Potion(new StatusEffectInstance(StatusEffects.ABSORPTION, 10240, 0)));
    public static Potion STRONG_ABSORPTION_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "strong_absorption_potion"), new Potion(new StatusEffectInstance(StatusEffects.ABSORPTION, 2560, 1)));
    public static Potion CONDUIT_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "conduit_potion"), new Potion(new StatusEffectInstance(StatusEffects.CONDUIT_POWER, 5120, 0)));
    public static Potion LONG_CONDUIT_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "long_conduit_potion"), new Potion(new StatusEffectInstance(StatusEffects.CONDUIT_POWER, 10240, 0)));
    public static Potion STRONG_CONDUIT_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "strong_conduit_potion"), new Potion(new StatusEffectInstance(StatusEffects.CONDUIT_POWER, 2560, 1)));
    public static Potion DARKNESS_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "darkness_potion"), new Potion(new StatusEffectInstance(StatusEffects.DARKNESS, 5120, 0)));
    public static Potion LONG_DARKNESS_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "long_darkness_potion"), new Potion(new StatusEffectInstance(StatusEffects.DARKNESS, 10240, 0)));
    public static Potion STRONG_DARKNESS_POTION = Registry.register(Registries.POTION, new Identifier(Hmh2.MOD_ID, "strong_darkness_potion"), new Potion(new StatusEffectInstance(StatusEffects.DARKNESS, 2560, 1)));

    public static void registerPotionRecipes() {
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.ENDER_SKIN_POTION, Items.FERMENTED_SPIDER_EYE, ModPotions.QUANTUM_LOCK_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.QUANTUM_LOCK_POTION, Items.REDSTONE, ModPotions.LONG_QUANTUM_LOCK_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.QUANTUM_LOCK_POTION, Items.GLOWSTONE_DUST, ModPotions.STRONG_QUANTUM_LOCK_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, ModItems.ENDER_CORN, ModPotions.ENDER_SKIN_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.ENDER_SKIN_POTION, Items.REDSTONE, ModPotions.LONG_ENDER_SKIN_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.ENDER_SKIN_POTION, Items.GLOWSTONE_DUST, ModPotions.STRONG_ENDER_SKIN_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, ModItems.SILK, ModPotions.SILK_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.SILK_POTION, Items.REDSTONE, ModPotions.LONG_SILK_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.SILK_POTION, Items.GLOWSTONE_DUST, ModPotions.STRONG_SILK_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, ModItems.ASH_CREAM, ModPotions.SLIME_LUNG_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.SLIME_LUNG_POTION, Items.REDSTONE, ModPotions.LONG_SLIME_LUNG_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.SLIME_LUNG_POTION, Items.GLOWSTONE_DUST, ModPotions.STRONG_SLIME_LUNG_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, Items.OBSIDIAN, ModPotions.MINING_FATIGUE_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.MINING_FATIGUE_POTION, Items.REDSTONE, ModPotions.LONG_MINING_FATIGUE_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.MINING_FATIGUE_POTION, Items.GLOWSTONE_DUST, ModPotions.STRONG_MINING_FATIGUE_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.MINING_FATIGUE_POTION, Items.GOLD_INGOT, ModPotions.HASTE_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.HASTE_POTION, Items.REDSTONE, ModPotions.LONG_HASTE_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.HASTE_POTION, Items.GLOWSTONE_DUST, ModPotions.STRONG_HASTE_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.SLOW_FALLING, Items.ENDER_PEARL, ModPotions.LEVITATION_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.LEVITATION_POTION, Items.REDSTONE, ModPotions.LONG_LEVITATION_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.LEVITATION_POTION, Items.GLOWSTONE_DUST, ModPotions.STRONG_LEVITATION_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, Items.WITHER_SKELETON_SKULL, ModPotions.BLINDNESS_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.BLINDNESS_POTION, Items.REDSTONE, ModPotions.LONG_BLINDNESS_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.BLINDNESS_POTION, Items.GLOWSTONE, ModPotions.GLOWING_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.GLOWING_POTION, Items.REDSTONE, ModPotions.LONG_GLOWING_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, Items.BELL, ModPotions.BAD_LUCK_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.BAD_LUCK_POTION, Items.REDSTONE, ModPotions.LONG_BAD_LUCK_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.BAD_LUCK_POTION, Items.GLOWSTONE_DUST, ModPotions.STRONG_BAD_LUCK_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.BAD_LUCK_POTION, Items.ENDER_EYE, ModPotions.LUCK_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.LUCK_POTION, Items.REDSTONE, ModPotions.LONG_LUCK_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.LUCK_POTION, Items.GLOWSTONE_DUST, ModPotions.STRONG_LUCK_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, Items.ROTTEN_FLESH, ModPotions.HUNGER_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.HUNGER_POTION, Items.REDSTONE, ModPotions.LONG_HUNGER_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.HUNGER_POTION, Items.GLOWSTONE_DUST, ModPotions.STRONG_HUNGER_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.HUNGER_POTION, Items.BLUE_ORCHID, ModPotions.SATURATION_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.SATURATION_POTION, Items.REDSTONE, ModPotions.LONG_SATURATION_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.SATURATION_POTION, Items.GLOWSTONE_DUST, ModPotions.STRONG_SATURATION_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, Items.CACTUS, ModPotions.BAD_OMEN_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.BAD_OMEN_POTION, Items.REDSTONE, ModPotions.LONG_BAD_OMEN_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.BAD_OMEN_POTION, Items.GLOWSTONE_DUST, ModPotions.STRONG_BAD_OMEN_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.BAD_OMEN_POTION, Items.EMERALD_BLOCK, ModPotions.VILLAGE_HERO_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.VILLAGE_HERO_POTION, Items.REDSTONE, ModPotions.LONG_VILLAGE_HERO_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.VILLAGE_HERO_POTION, Items.GLOWSTONE_DUST, ModPotions.STRONG_VILLAGE_HERO_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, Items.WET_SPONGE, ModPotions.NAUSEA_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.NAUSEA_POTION, Items.REDSTONE, ModPotions.LONG_NAUSEA_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.NAUSEA_POTION, Items.GLOWSTONE_DUST, ModPotions.STRONG_NAUSEA_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.NAUSEA_POTION, Items.PRISMARINE_SHARD, ModPotions.DOLPHINS_GRACE_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.DOLPHINS_GRACE_POTION, Items.REDSTONE, ModPotions.LONG_DOLPHINS_GRACE_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.DOLPHINS_GRACE_POTION, Items.GLOWSTONE_DUST, ModPotions.STRONG_DOLPHINS_GRACE_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.REGENERATION, Items.NETHERITE_SCRAP, ModPotions.WITHER_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.WITHER_POTION, Items.REDSTONE, ModPotions.LONG_WITHER_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.WITHER_POTION, Items.GLOWSTONE_DUST, ModPotions.STRONG_WITHER_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, Items.NETHER_WART, ModPotions.RESISTANCE_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.RESISTANCE_POTION, Items.REDSTONE, ModPotions.LONG_RESISTANCE_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.RESISTANCE_POTION, Items.GLOWSTONE_DUST, ModPotions.STRONG_RESISTANCE_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, Items.HONEY_BLOCK, ModPotions.HEALTH_BOOST_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.HEALTH_BOOST_POTION, Items.REDSTONE, ModPotions.LONG_HEALTH_BOOST_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.HEALTH_BOOST_POTION, Items.GLOWSTONE_DUST, ModPotions.STRONG_HEALTH_BOOST_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, SustenanceItems.HEART, ModPotions.ABSORPTION_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.ABSORPTION_POTION, Items.REDSTONE, ModPotions.LONG_ABSORPTION_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.ABSORPTION_POTION, Items.GLOWSTONE_DUST, ModPotions.STRONG_ABSORPTION_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, Items.NAUTILUS_SHELL, ModPotions.CONDUIT_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.CONDUIT_POTION, Items.REDSTONE, ModPotions.LONG_CONDUIT_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.CONDUIT_POTION, Items.GLOWSTONE_DUST, ModPotions.STRONG_CONDUIT_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.DARKNESS_POTION, Items.REDSTONE, ModPotions.LONG_DARKNESS_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(ModPotions.DARKNESS_POTION, Items.GLOWSTONE_DUST, ModPotions.STRONG_DARKNESS_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, MagicBlocks.AMBER_DUST.asItem(), Potions.FIRE_RESISTANCE);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, MagicBlocks.ANDALUSITE_DUST.asItem(), ModPotions.MINING_FATIGUE_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, MagicBlocks.AQUAMARINE_DUST.asItem(), ModPotions.DOLPHINS_GRACE_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, MagicBlocks.CITRINE_DUST.asItem(), ModPotions.HEALTH_BOOST_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, MagicBlocks.DIOPSIDE_DUST.asItem(), ModPotions.BAD_OMEN_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, MagicBlocks.GARNET_DUST.asItem(), ModPotions.SILK_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, MagicBlocks.HESSONITE_DUST.asItem(), Potions.STRENGTH);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, MagicBlocks.MALICHITE_DUST.asItem(), ModPotions.HUNGER_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, MagicBlocks.MOONSTONE_DUST.asItem(), Potions.SLOWNESS);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, MagicBlocks.OPAL_DUST.asItem(), ModPotions.CONDUIT_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, MagicBlocks.PERIDOT_DUST.asItem(), Potions.LEAPING);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, MagicBlocks.PREHNITE_DUST.asItem(), Potions.POISON);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, MagicBlocks.RUBY_DUST.asItem(), ModPotions.SATURATION_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, MagicBlocks.SAPPHIRE_DUST.asItem(), Potions.NIGHT_VISION);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, MagicBlocks.SMOKY_QUARTZ_DUST.asItem(), ModPotions.WITHER_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, MagicBlocks.SPESSARITE_DUST.asItem(), ModPotions.SILK_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, MagicBlocks.SPHENE_DUST.asItem(), ModPotions.LUCK_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, MagicBlocks.SPINEL_DUST.asItem(), ModPotions.RESISTANCE_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, MagicBlocks.TANZANITE_DUST.asItem(), Potions.WATER_BREATHING);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, MagicBlocks.TOPAZ_DUST.asItem(), ModPotions.BAD_LUCK_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, MagicBlocks.TORMALINE_DUST.asItem(), Potions.REGENERATION);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, MagicBlocks.TSAVORITE_DUST.asItem(), ModPotions.GLOWING_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, MagicBlocks.ZIRCON_DUST.asItem(), Potions.SLOW_FALLING);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, MagicBlocks.AMETHYST_DUST.asItem(), ModPotions.NAUSEA_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, MagicBlocks.CHARCOAL_DUST.asItem(), Potions.WEAKNESS);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, MagicBlocks.COAL_DUST.asItem(), ModPotions.DARKNESS_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, MagicBlocks.COPPER_DUST.asItem(), ModPotions.LEVITATION_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, MagicBlocks.DIAMOND_DUST.asItem(), Potions.SWIFTNESS);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, MagicBlocks.EMERALD_DUST.asItem(), ModPotions.VILLAGE_HERO_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, MagicBlocks.FLINT_DUST.asItem(), ModPotions.BLINDNESS_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, MagicBlocks.GOLD_DUST.asItem(), ModPotions.HASTE_POTION);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, MagicBlocks.IRON_DUST.asItem(), Potions.INVISIBILITY);
        BrewingRecipeRegistry.registerPotionRecipe(Potions.AWKWARD, MagicBlocks.LAPIS_DUST.asItem(), ModPotions.ABSORPTION_POTION);
    }
}
