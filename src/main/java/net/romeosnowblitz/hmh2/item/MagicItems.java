package net.romeosnowblitz.hmh2.item;

import net.fabricmc.fabric.api.item.v1.FabricItemSettings;
import net.fabricmc.fabric.api.itemgroup.v1.ItemGroupEvents;
import net.minecraft.entity.effect.StatusEffects;
import net.minecraft.item.Item;
import net.minecraft.item.ItemGroup;
import net.minecraft.registry.Registries;
import net.minecraft.registry.Registry;
import net.minecraft.util.Identifier;
import net.romeosnowblitz.hmh2.Hmh2;
import net.romeosnowblitz.hmh2.fluid.ModFluids;
import net.romeosnowblitz.hmh2.item.custom.magic.GenericAmulet;
import net.romeosnowblitz.hmh2.item.custom.magic.charms.*;
import net.romeosnowblitz.hmh2.item.custom.magic.fluids.*;

import static net.minecraft.item.Items.BUCKET;

public class MagicItems {

    //Gems (23)
    public static final Item AMBER = registerItem("amber", new Item(new FabricItemSettings()));
    public static final Item ANDALUSITE = registerItem("andalusite", new Item(new FabricItemSettings()));
    public static final Item AQUAMARINE = registerItem("aquamarine", new Item(new FabricItemSettings()));
    public static final Item CITRINE = registerItem("citrine", new Item(new FabricItemSettings()));
    public static final Item DIOPSIDE = registerItem("diopside", new Item(new FabricItemSettings()));
    public static final Item GARNET = registerItem("garnet", new Item(new FabricItemSettings()));
    public static final Item HESSONITE = registerItem("hessonite", new Item(new FabricItemSettings()));
    public static final Item MALICHITE = registerItem("malichite", new Item(new FabricItemSettings()));
    public static final Item MOONSTONE = registerItem("moonstone", new Item(new FabricItemSettings()));
    public static final Item OPAL = registerItem("opal", new Item(new FabricItemSettings()));
    public static final Item PERIDOT = registerItem("peridot", new Item(new FabricItemSettings()));
    public static final Item PREHNITE = registerItem("prehnite", new Item(new FabricItemSettings()));
    public static final Item RUBY = registerItem("ruby", new Item(new FabricItemSettings()));
    public static final Item SAPPHIRE = registerItem("sapphire", new Item(new FabricItemSettings()));
    public static final Item SMOKY_QUARTZ = registerItem("smoky_quartz", new Item(new FabricItemSettings()));
    public static final Item SPESSARITE = registerItem("spessarite", new Item(new FabricItemSettings()));
    public static final Item SPHENE = registerItem("sphene", new Item(new FabricItemSettings()));
    public static final Item SPINEL = registerItem("spinel", new Item(new FabricItemSettings()));
    public static final Item TANZANITE = registerItem("tanzanite", new Item(new FabricItemSettings()));
    public static final Item TOPAZ = registerItem("topaz", new Item(new FabricItemSettings()));
    public static final Item TORMALINE = registerItem("tormaline", new Item(new FabricItemSettings()));
    public static final Item TSAVORITE = registerItem("tsavorite", new Item(new FabricItemSettings()));
    public static final Item ZIRCON = registerItem("zircon", new Item(new FabricItemSettings()));

    //Lockets
    public static final Item AMBER_LOCKET = registerItem("amber_locket", new Item(new FabricItemSettings()));
    public static final Item AMETHYST_LOCKET = registerItem("amethyst_locket", new Item(new FabricItemSettings()));
    public static final Item ANDALUSITE_LOCKET = registerItem("andalusite_locket", new Item(new FabricItemSettings()));
    public static final Item AQUAMARINE_LOCKET = registerItem("aquamarine_locket", new Item(new FabricItemSettings()));
    public static final Item CHARCOAL_LOCKET = registerItem("charcoal_locket", new Item(new FabricItemSettings()));
    public static final Item CITRINE_LOCKET = registerItem("citrine_locket", new Item(new FabricItemSettings()));
    public static final Item COAL_LOCKET = registerItem("coal_locket", new Item(new FabricItemSettings()));
    public static final Item COPPER_LOCKET = registerItem("copper_locket", new Item(new FabricItemSettings()));
    public static final Item DIAMOND_LOCKET = registerItem("diamond_locket", new Item(new FabricItemSettings()));
    public static final Item DIOPSIDE_LOCKET = registerItem("diopside_locket", new Item(new FabricItemSettings()));
    public static final Item EMERALD_LOCKET = registerItem("emerald_locket", new Item(new FabricItemSettings()));
    public static final Item FLINT_LOCKET = registerItem("flint_locket", new Item(new FabricItemSettings()));
    public static final Item GARNET_LOCKET = registerItem("garnet_locket", new Item(new FabricItemSettings()));
    public static final Item GOLD_LOCKET = registerItem("gold_locket", new Item(new FabricItemSettings()));
    public static final Item HESSONITE_LOCKET = registerItem("hessonite_locket", new Item(new FabricItemSettings()));
    public static final Item IRON_LOCKET = registerItem("iron_locket", new Item(new FabricItemSettings()));
    public static final Item LAPIS_LOCKET = registerItem("lapis_locket", new Item(new FabricItemSettings()));
    public static final Item MALICHITE_LOCKET = registerItem("malichite_locket", new Item(new FabricItemSettings()));
    public static final Item MOONSTONE_LOCKET = registerItem("moonstone_locket", new Item(new FabricItemSettings()));
    public static final Item OPAL_LOCKET = registerItem("opal_locket", new Item(new FabricItemSettings()));
    public static final Item PERIDOT_LOCKET = registerItem("peridot_locket", new Item(new FabricItemSettings()));
    public static final Item PREHNITE_LOCKET = registerItem("prehnite_locket", new Item(new FabricItemSettings()));
    public static final Item SPESSARITE_LOCKET = registerItem("spessarite_locket", new Item(new FabricItemSettings()));
    public static final Item RUBY_LOCKET = registerItem("ruby_locket", new Item(new FabricItemSettings()));
    public static final Item SAPPHIRE_LOCKET = registerItem("sapphire_locket", new Item(new FabricItemSettings()));
    public static final Item SMOKY_QUARTZ_LOCKET = registerItem("smoky_quartz_locket", new Item(new FabricItemSettings()));
    public static final Item SPHENE_LOCKET = registerItem("sphene_locket", new Item(new FabricItemSettings()));
    public static final Item SPINEL_LOCKET = registerItem("spinel_locket", new Item(new FabricItemSettings()));
    public static final Item TANZANITE_LOCKET = registerItem("tanzanite_locket", new Item(new FabricItemSettings()));
    public static final Item TOPAZ_LOCKET = registerItem("topaz_locket", new Item(new FabricItemSettings()));
    public static final Item TORMALINE_LOCKET = registerItem("tormaline_locket", new Item(new FabricItemSettings()));
    public static final Item TSAVORITE_LOCKET = registerItem("tsavorite_locket", new Item(new FabricItemSettings()));
    public static final Item ZIRCON_LOCKET = registerItem("zircon_locket", new Item(new FabricItemSettings()));

    //Amulets
    public static final Item AMULET_OF_ACCELERATION = registerItem("amulet_of_acceleration", new GenericAmulet(new FabricItemSettings(), StatusEffects.SPEED,false));
    public static final Item AMULET_OF_ANTIGRAVITY = registerItem("amulet_of_antigravity", new GenericAmulet(new FabricItemSettings().maxDamage(100),StatusEffects.LEVITATION,true,true));
    public static final Item AMULET_OF_ARTHRITIS = registerItem("amulet_of_arthritis", new GenericAmulet(new FabricItemSettings().maxDamage(100),StatusEffects.MINING_FATIGUE,true,true));
    public static final Item AMULET_OF_BAD_LUCK = registerItem("amulet_of_bad_luck", new GenericAmulet(new FabricItemSettings().maxDamage(64),StatusEffects.UNLUCK,true,true));
    public static final Item AMULET_OF_BRICKS = registerItem("amulet_of_bricks", new GenericAmulet(new FabricItemSettings().maxDamage(10),StatusEffects.INSTANT_DAMAGE,true,true));
    public static final Item AMULET_OF_BRO_YOU_GOTTA_TRY_THIS = registerItem("amulet_of_bro_you_gotta_try_this", new GenericAmulet(new FabricItemSettings().maxDamage(16),StatusEffects.NAUSEA,true,true));
    public static final Item AMULET_OF_BUBBLES = registerItem("amulet_of_bubbles", new GenericAmulet(new FabricItemSettings(),StatusEffects.WATER_BREATHING,false));
    public static final Item AMULET_OF_CLOAKING = registerItem("amulet_of_cloaking", new GenericAmulet(new FabricItemSettings().maxDamage(100),StatusEffects.INVISIBILITY,true));
    public static final Item AMULET_OF_CLOSED_EYES = registerItem("amulet_of_closed_eyes", new GenericAmulet(new FabricItemSettings().maxDamage(16),StatusEffects.BLINDNESS,true,true));
    public static final Item AMULET_OF_CLOVERS = registerItem("amulet_of_clovers", new GenericAmulet(new FabricItemSettings().maxDamage(64),StatusEffects.LUCK,true));
    public static final Item AMULET_OF_DECAY = registerItem("amulet_of_decay", new GenericAmulet(new FabricItemSettings().maxDamage(16),StatusEffects.WITHER,true,true));
    public static final Item AMULET_OF_ENDURANCE = registerItem("amulet_of_endurance", new GenericAmulet(new FabricItemSettings().maxDamage(100),StatusEffects.ABSORPTION,true));
    public static final Item AMULET_OF_EXCAVATION = registerItem("amulet_of_excavation", new GenericAmulet(new FabricItemSettings(), StatusEffects.HASTE,false));
    public static final Item AMULET_OF_EXTRA_LOVE = registerItem("amulet_of_extra_love", new GenericAmulet(new FabricItemSettings().maxDamage(100),StatusEffects.HEALTH_BOOST,true));
    public static final Item AMULET_OF_FLAMELESSNESS = registerItem("amulet_of_flamelessness", new GenericAmulet(new FabricItemSettings().maxDamage(128),StatusEffects.FIRE_RESISTANCE,true));
    public static final Item AMULET_OF_FRAILTY = registerItem("amulet_of_frailty", new GenericAmulet(new FabricItemSettings().maxDamage(16),StatusEffects.WEAKNESS,true,true));
    public static final Item AMULET_OF_GILLS = registerItem("amulet_of_gills", new GenericAmulet(new FabricItemSettings(),StatusEffects.CONDUIT_POWER,false));
    public static final Item AMULET_OF_GLUTTONY = registerItem("amulet_of_gluttony", new GenericAmulet(new FabricItemSettings().maxDamage(64),StatusEffects.HUNGER,true,true));
    public static final Item AMULET_OF_HEALING = registerItem("amulet_of_healing", new GenericAmulet(new FabricItemSettings().maxDamage(32),StatusEffects.REGENERATION,true));
    public static final Item AMULET_OF_HERCULES = registerItem("amulet_of_hercules", new GenericAmulet(new FabricItemSettings().maxDamage(10),StatusEffects.STRENGTH,true));
    public static final Item AMULET_OF_ILLUMINATION = registerItem("amulet_of_illumination", new GenericAmulet(new FabricItemSettings(),StatusEffects.GLOWING,false,true));//I guess? I dont think you can get more glowing?
    public static final Item AMULET_OF_LEAPING = registerItem("amulet_of_leaping", new GenericAmulet(new FabricItemSettings().maxDamage(128),StatusEffects.JUMP_BOOST,true));
    public static final Item AMULET_OF_NIGHT_SIGHT = registerItem("amulet_of_night_sight", new GenericAmulet(new FabricItemSettings(),StatusEffects.NIGHT_VISION,false));
    public static final Item AMULET_OF_NOURISHMENT = registerItem("amulet_of_nourishment", new GenericAmulet(new FabricItemSettings().maxDamage(16),StatusEffects.SATURATION,true));
    public static final Item AMULET_OF_OLYMPIC_SWIMMING = registerItem("amulet_of_olympic_swimming", new GenericAmulet(new FabricItemSettings(),StatusEffects.DOLPHINS_GRACE,false));
    public static final Item AMULET_OF_RAIDS = registerItem("amulet_of_raids", new GenericAmulet(new FabricItemSettings().maxDamage(32),StatusEffects.BAD_OMEN,true,true));
    public static final Item AMULET_OF_REJUVINATION = registerItem("amulet_of_rejuvination", new GenericAmulet(new FabricItemSettings().maxDamage(16),StatusEffects.INSTANT_HEALTH,true));
    public static final Item AMULET_OF_SHADOWS = registerItem("amulet_of_shadows", new GenericAmulet(new FabricItemSettings().maxDamage(16),StatusEffects.DARKNESS,true,true));
    public static final Item AMULET_OF_SHIELDING = registerItem("amulet_of_shielding", new GenericAmulet(new FabricItemSettings().maxDamage(32),StatusEffects.RESISTANCE,true));
    public static final Item AMULET_OF_SICKENING = registerItem("amulet_of_sickening", new GenericAmulet(new FabricItemSettings().maxDamage(16),StatusEffects.POISON,true,true));
    public static final Item AMULET_OF_THE_PHANTOM = registerItem("amulet_of_the_phantom", new GenericAmulet(new FabricItemSettings(),StatusEffects.SLOW_FALLING,false));
    public static final Item AMULET_OF_THE_TORTISE = registerItem("amulet_of_the_tortise", new GenericAmulet(new FabricItemSettings().maxDamage(64),StatusEffects.SLOWNESS,false,true));
    public static final Item AMULET_OF_THE_VILLAGE_HERO = registerItem("amulet_of_the_village_hero", new GenericAmulet(new FabricItemSettings().maxDamage(100),StatusEffects.HERO_OF_THE_VILLAGE,true));

    //Charms
    public static final Item FIGHT_CHARM = registerItem("fight_charm", new FightCharmItem(new FabricItemSettings()));
    public static final Item LIGHT_CHARM = registerItem("light_charm", new LightCharmItem(new FabricItemSettings()));
    public static final Item MIGHT_CHARM = registerItem("might_charm", new MightCharmItem(new FabricItemSettings()));
    public static final Item SIGHT_CHARM = registerItem("sight_charm", new SightCharmItem(new FabricItemSettings()));
    public static final Item FLIGHT_CHARM = registerItem("flight_charm", new FlightCharmItem(new FabricItemSettings()));
    public static final Item SLIGHT_CHARM = registerItem("slight_charm", new SlightCharmItem(new FabricItemSettings()));
    public static final Item ALIGHT_CHARM = registerItem("alight_charm", new AlightCharmItem(new FabricItemSettings()));
    public static final Item BLIGHT_CHARM = registerItem("blight_charm", new BlightCharmItem(new FabricItemSettings()));
    public static final Item BRIGHT_CHARM = registerItem("bright_charm", new BrightCharmItem(new FabricItemSettings()));
    public static final Item FRIGHT_CHARM = registerItem("fright_charm", new FrightCharmItem(new FabricItemSettings()));
    public static final Item KNIGHT_CHARM = registerItem("knight_charm", new KnightCharmItem(new FabricItemSettings()));

    public static final Item ABSORPTION_FLUID = registerItem("absorption_fluid", new AbsorptionBucket(ModFluids.ABSORPTION_FLUID_STILL, new FabricItemSettings().recipeRemainder(BUCKET).maxCount(1)));
    public static final Item BAD_LUCK_FLUID = registerItem("bad_luck_fluid", new BadLuckBucket(ModFluids.BAD_LUCK_FLUID_STILL, new FabricItemSettings().recipeRemainder(BUCKET).maxCount(1)));
    public static final Item BAD_OMEN_FLUID = registerItem("bad_omen_fluid", new BadOmenBucket(ModFluids.BAD_OMEN_FLUID_STILL, new FabricItemSettings().recipeRemainder(BUCKET).maxCount(1)));
    public static final Item BLINDNESS_FLUID = registerItem("blindness_fluid", new BlindnessBucket(ModFluids.BLINDNESS_FLUID_STILL, new FabricItemSettings().recipeRemainder(BUCKET).maxCount(1)));
    public static final Item CONDUIT_POWER_FLUID = registerItem("conduit_power_fluid", new ConduitPowerBucket(ModFluids.CONDUIT_POWER_FLUID_STILL, new FabricItemSettings().recipeRemainder(BUCKET).maxCount(1)));
    public static final Item DARKNESS_FLUID = registerItem("darkness_fluid", new DarknessBucket(ModFluids.DARKNESS_FLUID_STILL, new FabricItemSettings().recipeRemainder(BUCKET).maxCount(1)));
    public static final Item DOLPHINS_GRACE_FLUID = registerItem("dolphins_grace_fluid", new DolphinsGraceBucket(ModFluids.DOLPHINS_GRACE_FLUID_STILL, new FabricItemSettings().recipeRemainder(BUCKET).maxCount(1)));
    public static final Item FIRE_IMMUNITY_FLUID = registerItem("fire_immunity_fluid", new FireImmunityBucket(ModFluids.FIRE_IMMUNITY_FLUID_STILL, new FabricItemSettings().recipeRemainder(BUCKET).maxCount(1)));
    public static final Item GLOWING_FLUID = registerItem("glowing_fluid", new GlowingBucket(ModFluids.GLOWING_FLUID_STILL, new FabricItemSettings().recipeRemainder(BUCKET).maxCount(1)));
    public static final Item HASTE_FLUID = registerItem("haste_fluid", new HasteBucket(ModFluids.HASTE_FLUID_STILL, new FabricItemSettings().recipeRemainder(BUCKET).maxCount(1)));
    public static final Item HEALTH_BOOST_FLUID = registerItem("health_boost_fluid", new HealthBoostBucket(ModFluids.HEALTH_BOOST_FLUID_STILL, new FabricItemSettings().recipeRemainder(BUCKET).maxCount(1)));
    public static final Item HUNGER_FLUID = registerItem("hunger_fluid", new HungerBucket(ModFluids.HUNGER_FLUID_STILL, new FabricItemSettings().recipeRemainder(BUCKET).maxCount(1)));
    public static final Item INSTANT_DAMAGE_FLUID = registerItem("instant_damage_fluid", new InstantDamageBucket(ModFluids.INSTANT_DAMAGE_FLUID_STILL, new FabricItemSettings().recipeRemainder(BUCKET).maxCount(1)));
    public static final Item INSTANT_HEALTH_FLUID = registerItem("instant_health_fluid", new InstantHealthBucket(ModFluids.INSTANT_HEALTH_FLUID_STILL, new FabricItemSettings().recipeRemainder(BUCKET).maxCount(1)));
    public static final Item INVISIBILITY_FLUID = registerItem("invisibility_fluid", new InvisibilityBucket(ModFluids.INVISIBILITY_FLUID_STILL, new FabricItemSettings().recipeRemainder(BUCKET).maxCount(1)));
    public static final Item JUMP_BOOST_FLUID = registerItem("jump_boost_fluid", new JumpBoostBucket(ModFluids.JUMP_BOOST_FLUID_STILL, new FabricItemSettings().recipeRemainder(BUCKET).maxCount(1)));
    public static final Item LEVITATION_FLUID = registerItem("levitation_fluid", new LeveitationBucket(ModFluids.LEVITATION_FLUID_STILL, new FabricItemSettings().recipeRemainder(BUCKET).maxCount(1)));
    public static final Item LUCK_FLUID = registerItem("luck_fluid", new LuckBucket(ModFluids.LUCK_FLUID_STILL, new FabricItemSettings().recipeRemainder(BUCKET).maxCount(1)));
    public static final Item MINING_FATIGUE_FLUID = registerItem("mining_fatigue_fluid", new MiningFatigueBucket(ModFluids.MINING_FATIGUE_FLUID_STILL, new FabricItemSettings().recipeRemainder(BUCKET).maxCount(1)));
    public static final Item NAUSEA_FLUID = registerItem("nausea_fluid", new NauseaBucket(ModFluids.NAUSEA_FLUID_STILL, new FabricItemSettings().recipeRemainder(BUCKET).maxCount(1)));
    public static final Item NIGHT_VISION_FLUID = registerItem("night_vision_fluid", new NightVisionBucket(ModFluids.NIGHT_VISION_FLUID_STILL, new FabricItemSettings().recipeRemainder(BUCKET).maxCount(1)));
    public static final Item POISON_FLUID = registerItem("poison_fluid", new PoisonBucket(ModFluids.POISON_FLUID_STILL, new FabricItemSettings().recipeRemainder(BUCKET).maxCount(1)));
    public static final Item REGENERATION_FLUID = registerItem("regeneration_fluid", new RegenerationBucket(ModFluids.REGENERATION_FLUID_STILL, new FabricItemSettings().recipeRemainder(BUCKET).maxCount(1)));
    public static final Item RESISTANCE_FLUID = registerItem("resistance_fluid", new ResistanceBucket(ModFluids.RESISTANCE_FLUID_STILL, new FabricItemSettings().recipeRemainder(BUCKET).maxCount(1)));
    public static final Item SATURATION_FLUID = registerItem("saturation_fluid", new SaturationBucket(ModFluids.SATURATION_FLUID_STILL, new FabricItemSettings().recipeRemainder(BUCKET).maxCount(1)));
    public static final Item SLOW_FALLING_FLUID = registerItem("slow_falling_fluid", new SlowFallingBucket(ModFluids.SLOW_FALLING_FLUID_STILL, new FabricItemSettings().recipeRemainder(BUCKET).maxCount(1)));
    public static final Item SLOWNESS_FLUID = registerItem("slowness_fluid", new SlownessBucket(ModFluids.SLOWNESS_FLUID_STILL, new FabricItemSettings().recipeRemainder(BUCKET).maxCount(1)));
    public static final Item SPEED_FLUID = registerItem("speed_fluid", new SpeedBucket(ModFluids.SPEED_FLUID_STILL, new FabricItemSettings().recipeRemainder(BUCKET).maxCount(1)));
    public static final Item STRENGTH_FLUID = registerItem("strength_fluid", new StrengthBucket(ModFluids.STRENGTH_FLUID_STILL, new FabricItemSettings().recipeRemainder(BUCKET).maxCount(1)));
    public static final Item VILLAGE_HERO_FLUID = registerItem("village_hero_fluid", new VillageHeroBucket(ModFluids.VILLAGE_HERO_FLUID_STILL, new FabricItemSettings().recipeRemainder(BUCKET).maxCount(1)));
    public static final Item WATER_BREATHING_FLUID = registerItem("water_breathing_fluid", new WaterBreathingBucket(ModFluids.WATER_BREATHING_FLUID_STILL, new FabricItemSettings().recipeRemainder(BUCKET).maxCount(1)));
    public static final Item WEAKNESS_FLUID = registerItem("weakness_fluid", new WeaknessBucket(ModFluids.WEAKNESS_FLUID_STILL, new FabricItemSettings().recipeRemainder(BUCKET).maxCount(1)));
    public static final Item WITHER_FLUID = registerItem("wither_fluid", new WitherBucket(ModFluids.WITHER_FLUID_STILL, new FabricItemSettings().recipeRemainder(BUCKET).maxCount(1)));

    private static Item registerItem(String name, Item item){
        return Registry.register(Registries.ITEM, new Identifier(Hmh2.MOD_ID, name), item);
    }

    public static void addItemsToItemGroup() {
        addToItemGroup(ModItemGroup.MAGIC, AMBER);
        addToItemGroup(ModItemGroup.MAGIC, ANDALUSITE);
        addToItemGroup(ModItemGroup.MAGIC, AQUAMARINE);
        addToItemGroup(ModItemGroup.MAGIC, CITRINE);
        addToItemGroup(ModItemGroup.MAGIC, DIOPSIDE);
        addToItemGroup(ModItemGroup.MAGIC, GARNET);
        addToItemGroup(ModItemGroup.MAGIC, HESSONITE);
        addToItemGroup(ModItemGroup.MAGIC, MALICHITE);
        addToItemGroup(ModItemGroup.MAGIC, MOONSTONE);
        addToItemGroup(ModItemGroup.MAGIC, OPAL);
        addToItemGroup(ModItemGroup.MAGIC, PERIDOT);
        addToItemGroup(ModItemGroup.MAGIC, PREHNITE);
        addToItemGroup(ModItemGroup.MAGIC, RUBY);
        addToItemGroup(ModItemGroup.MAGIC, SAPPHIRE);
        addToItemGroup(ModItemGroup.MAGIC, SMOKY_QUARTZ);
        addToItemGroup(ModItemGroup.MAGIC, SPESSARITE);
        addToItemGroup(ModItemGroup.MAGIC, SPHENE);
        addToItemGroup(ModItemGroup.MAGIC, SPINEL);
        addToItemGroup(ModItemGroup.MAGIC, TANZANITE);
        addToItemGroup(ModItemGroup.MAGIC, TOPAZ);
        addToItemGroup(ModItemGroup.MAGIC, TORMALINE);
        addToItemGroup(ModItemGroup.MAGIC, TSAVORITE);
        addToItemGroup(ModItemGroup.MAGIC, ZIRCON);
        addToItemGroup(ModItemGroup.MAGIC, AMBER_LOCKET);
        addToItemGroup(ModItemGroup.MAGIC, ANDALUSITE_LOCKET);
        addToItemGroup(ModItemGroup.MAGIC, AQUAMARINE_LOCKET);
        addToItemGroup(ModItemGroup.MAGIC, CITRINE_LOCKET);
        addToItemGroup(ModItemGroup.MAGIC, DIOPSIDE_LOCKET);
        addToItemGroup(ModItemGroup.MAGIC, GARNET_LOCKET);
        addToItemGroup(ModItemGroup.MAGIC, HESSONITE_LOCKET);
        addToItemGroup(ModItemGroup.MAGIC, MALICHITE_LOCKET);
        addToItemGroup(ModItemGroup.MAGIC, MOONSTONE_LOCKET);
        addToItemGroup(ModItemGroup.MAGIC, OPAL_LOCKET);
        addToItemGroup(ModItemGroup.MAGIC, PERIDOT_LOCKET);
        addToItemGroup(ModItemGroup.MAGIC, PREHNITE_LOCKET);
        addToItemGroup(ModItemGroup.MAGIC, RUBY_LOCKET);
        addToItemGroup(ModItemGroup.MAGIC, SAPPHIRE_LOCKET);
        addToItemGroup(ModItemGroup.MAGIC, SMOKY_QUARTZ_LOCKET);
        addToItemGroup(ModItemGroup.MAGIC, SPESSARITE_LOCKET);
        addToItemGroup(ModItemGroup.MAGIC, SPHENE_LOCKET);
        addToItemGroup(ModItemGroup.MAGIC, SPINEL_LOCKET);
        addToItemGroup(ModItemGroup.MAGIC, TANZANITE_LOCKET);
        addToItemGroup(ModItemGroup.MAGIC, TOPAZ_LOCKET);
        addToItemGroup(ModItemGroup.MAGIC, TORMALINE_LOCKET);
        addToItemGroup(ModItemGroup.MAGIC, TSAVORITE_LOCKET);
        addToItemGroup(ModItemGroup.MAGIC, ZIRCON_LOCKET);
        addToItemGroup(ModItemGroup.MAGIC, AMULET_OF_ACCELERATION);
        addToItemGroup(ModItemGroup.MAGIC, AMULET_OF_ANTIGRAVITY);
        addToItemGroup(ModItemGroup.MAGIC, AMULET_OF_ARTHRITIS);
        addToItemGroup(ModItemGroup.MAGIC, AMULET_OF_BAD_LUCK);
        addToItemGroup(ModItemGroup.MAGIC, AMULET_OF_BRICKS);
        addToItemGroup(ModItemGroup.MAGIC, AMULET_OF_BRO_YOU_GOTTA_TRY_THIS);
        addToItemGroup(ModItemGroup.MAGIC, AMULET_OF_BUBBLES);
        addToItemGroup(ModItemGroup.MAGIC, AMULET_OF_CLOAKING);
        addToItemGroup(ModItemGroup.MAGIC, AMULET_OF_CLOSED_EYES);
        addToItemGroup(ModItemGroup.MAGIC, AMULET_OF_CLOVERS);
        addToItemGroup(ModItemGroup.MAGIC, AMULET_OF_DECAY);
        addToItemGroup(ModItemGroup.MAGIC, AMULET_OF_ENDURANCE);
        addToItemGroup(ModItemGroup.MAGIC, AMULET_OF_EXCAVATION);
        addToItemGroup(ModItemGroup.MAGIC, AMULET_OF_EXTRA_LOVE);
        addToItemGroup(ModItemGroup.MAGIC, AMULET_OF_FLAMELESSNESS);
        addToItemGroup(ModItemGroup.MAGIC, AMULET_OF_FRAILTY);
        addToItemGroup(ModItemGroup.MAGIC, AMULET_OF_GILLS);
        addToItemGroup(ModItemGroup.MAGIC, AMULET_OF_GLUTTONY);
        addToItemGroup(ModItemGroup.MAGIC, AMULET_OF_HEALING);
        addToItemGroup(ModItemGroup.MAGIC, AMULET_OF_HERCULES);
        addToItemGroup(ModItemGroup.MAGIC, AMULET_OF_ILLUMINATION);
        addToItemGroup(ModItemGroup.MAGIC, AMULET_OF_LEAPING);
        addToItemGroup(ModItemGroup.MAGIC, AMULET_OF_NIGHT_SIGHT);
        addToItemGroup(ModItemGroup.MAGIC, AMULET_OF_NOURISHMENT);
        addToItemGroup(ModItemGroup.MAGIC, AMULET_OF_OLYMPIC_SWIMMING);
        addToItemGroup(ModItemGroup.MAGIC, AMULET_OF_RAIDS);
        addToItemGroup(ModItemGroup.MAGIC, AMULET_OF_REJUVINATION);
        addToItemGroup(ModItemGroup.MAGIC, AMULET_OF_SHADOWS);
        addToItemGroup(ModItemGroup.MAGIC, AMULET_OF_SHIELDING);
        addToItemGroup(ModItemGroup.MAGIC, AMULET_OF_SICKENING);
        addToItemGroup(ModItemGroup.MAGIC, AMULET_OF_THE_PHANTOM);
        addToItemGroup(ModItemGroup.MAGIC, AMULET_OF_THE_TORTISE);
        addToItemGroup(ModItemGroup.MAGIC, AMULET_OF_THE_VILLAGE_HERO);
        addToItemGroup(ModItemGroup.MAGIC, FIGHT_CHARM);
        addToItemGroup(ModItemGroup.MAGIC, LIGHT_CHARM);
        addToItemGroup(ModItemGroup.MAGIC, MIGHT_CHARM);
        addToItemGroup(ModItemGroup.MAGIC, SIGHT_CHARM);
        addToItemGroup(ModItemGroup.MAGIC, FLIGHT_CHARM);
        addToItemGroup(ModItemGroup.MAGIC, SLIGHT_CHARM);
        addToItemGroup(ModItemGroup.MAGIC, ALIGHT_CHARM);
        addToItemGroup(ModItemGroup.MAGIC, BLIGHT_CHARM);
        addToItemGroup(ModItemGroup.MAGIC, BRIGHT_CHARM);
        addToItemGroup(ModItemGroup.MAGIC, FRIGHT_CHARM);
        addToItemGroup(ModItemGroup.MAGIC, KNIGHT_CHARM);
        addToItemGroup(ModItemGroup.MAGIC, ABSORPTION_FLUID);
        addToItemGroup(ModItemGroup.MAGIC, BAD_LUCK_FLUID);
        addToItemGroup(ModItemGroup.MAGIC, BAD_OMEN_FLUID);
        addToItemGroup(ModItemGroup.MAGIC, BLINDNESS_FLUID);
        addToItemGroup(ModItemGroup.MAGIC, CONDUIT_POWER_FLUID);
        addToItemGroup(ModItemGroup.MAGIC, DARKNESS_FLUID);
        addToItemGroup(ModItemGroup.MAGIC, DOLPHINS_GRACE_FLUID);
        addToItemGroup(ModItemGroup.MAGIC, FIRE_IMMUNITY_FLUID);
        addToItemGroup(ModItemGroup.MAGIC, GLOWING_FLUID);
        addToItemGroup(ModItemGroup.MAGIC, HASTE_FLUID);
        addToItemGroup(ModItemGroup.MAGIC, HEALTH_BOOST_FLUID);
        addToItemGroup(ModItemGroup.MAGIC, HUNGER_FLUID);
        addToItemGroup(ModItemGroup.MAGIC, INSTANT_DAMAGE_FLUID);
        addToItemGroup(ModItemGroup.MAGIC, INSTANT_HEALTH_FLUID);
        addToItemGroup(ModItemGroup.MAGIC, INVISIBILITY_FLUID);
        addToItemGroup(ModItemGroup.MAGIC, JUMP_BOOST_FLUID);
        addToItemGroup(ModItemGroup.MAGIC, LEVITATION_FLUID);
        addToItemGroup(ModItemGroup.MAGIC, LUCK_FLUID);
        addToItemGroup(ModItemGroup.MAGIC, MINING_FATIGUE_FLUID);
        addToItemGroup(ModItemGroup.MAGIC, NAUSEA_FLUID);
        addToItemGroup(ModItemGroup.MAGIC, NIGHT_VISION_FLUID);
        addToItemGroup(ModItemGroup.MAGIC, POISON_FLUID);
        addToItemGroup(ModItemGroup.MAGIC, REGENERATION_FLUID);
        addToItemGroup(ModItemGroup.MAGIC, RESISTANCE_FLUID);
        addToItemGroup(ModItemGroup.MAGIC, SATURATION_FLUID);
        addToItemGroup(ModItemGroup.MAGIC, SLOW_FALLING_FLUID);
        addToItemGroup(ModItemGroup.MAGIC, SLOWNESS_FLUID);
        addToItemGroup(ModItemGroup.MAGIC, SPEED_FLUID);
        addToItemGroup(ModItemGroup.MAGIC, STRENGTH_FLUID);
        addToItemGroup(ModItemGroup.MAGIC, VILLAGE_HERO_FLUID);
        addToItemGroup(ModItemGroup.MAGIC, WATER_BREATHING_FLUID);
        addToItemGroup(ModItemGroup.MAGIC, WEAKNESS_FLUID);
        addToItemGroup(ModItemGroup.MAGIC, WITHER_FLUID);
    }

    public static void addToItemGroup(ItemGroup group, Item item){
        ItemGroupEvents.modifyEntriesEvent(group).register(entries -> entries.add(item));
    }

    public static void registerModItems() {
        Hmh2.LOGGER.info("Registering Mod Items for " + Hmh2.MOD_ID);
        addItemsToItemGroup();
    }

}
